const Module=require("module"),extraNodePaths=["/usr/lib/nodejs","/usr/lib/iotjs"].filter(e=>!!e),existingNodePath=process.env.NODE_PATH?process.env.NODE_PATH.split(":"):[],mergedNodePath=Array.from(new Set([...existingNodePath,...extraNodePaths])).filter(Boolean);mergedNodePath.length>0&&(process.env.NODE_PATH=mergedNodePath.join(":"),Module._initPaths());const Service=require("webos-service"),https=require("https"),FLOATPLANE_HOST="www.floatplane.com",TRUSTED_UA=process.env.FLOATPLANE_UA||"Hydravion 1.0 (AndroidTV), CFNetwork",service=new Service("com.community.floatplane.enactmvp.login");function postJson(e,o,s=[]){return new Promise((r,t)=>{const n=JSON.stringify(o),a={hostname:FLOATPLANE_HOST,port:443,path:e,method:"POST",headers:{"Content-Type":"application/json","Content-Length":Buffer.byteLength(n),"User-Agent":TRUSTED_UA,Accept:"application/json"}};s.length>0&&(a.headers.Cookie=s.join("; "));const i=https.request(a,e=>{let o="";e.setEncoding("utf8"),e.on("data",e=>{o+=e}),e.on("end",()=>{let s;try{s=o?JSON.parse(o):{}}catch(e){s={message:o}}const t=e.headers["set-cookie"]||[];r({statusCode:e.statusCode,body:s,cookies:t})})});i.on("error",e=>{t(e)}),i.setTimeout(15e3,()=>{i.destroy(new Error("Floatplane login request timed out"))}),i.write(n),i.end()})}function respondSuccess(e,o){e.respond({returnValue:!0,statusCode:o.statusCode,body:o.body,cookies:o.cookies})}function respondError(e,o,s=500){e.respond({returnValue:!1,statusCode:s,errorCode:s,errorText:o})}service.register("login",async e=>{const{username:o,password:s}=e.payload||{};if(o&&s)try{const r=await postJson("/api/v2/auth/login",{username:o,password:s});if(r.statusCode>=400)return void respondError(e,r.body&&r.body.message||"Login failed",r.statusCode);respondSuccess(e,r)}catch(o){respondError(e,o.message||"Login request failed")}else respondError(e,"username and password are required",400)}),service.register("factor",async e=>{const{token:o,cookies:s=[]}=e.payload||{};if(o)try{const r=await postJson("/api/v2/auth/checkFor2faLogin",{token:o},s);if(r.statusCode>=400)return void respondError(e,r.body&&r.body.message||"Two-factor verification failed",r.statusCode);respondSuccess(e,r)}catch(o){respondError(e,o.message||"Two-factor request failed")}else respondError(e,"token is required",400)}),module.exports=service;